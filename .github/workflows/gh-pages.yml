name: Deploy to gh-pages Branch

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'main'
        type: string
  push:
    branches: [main]
    paths: ['examples/**']

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest
    
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run linter
      run: pnpm run lint
    
    - name: Run tests
      run: pnpm run test:run
    
    - name: Build production
      run: pnpm run build:prod
    
    - name: Install examples dependencies
      run: cd examples && pnpm install --frozen-lockfile
    
    - name: Build examples
      run: pnpm run examples:build
    
    - name: Setup gh-pages
      run: |
        # Create temp directory for gh-pages content
        mkdir -p temp-gh-pages
        
        # Copy built examples to temp directory
        cp -r examples/dist/* temp-gh-pages/
        
        # Copy classigo UMD build for examples
        cp dist/index.umd.js temp-gh-pages/classigo.umd.js
    
    - name: Deploy to gh-pages branch
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Checkout gh-pages branch or create it
        if git show-ref --verify --quiet refs/remotes/origin/gh-pages; then
          git checkout gh-pages
          git pull origin gh-pages
        else
          git checkout --orphan gh-pages
        fi
        
        # Remove all files except temp-gh-pages
        git rm -rf . || true
        git clean -fxd
        
        # Copy temp content to root
        cp -r temp-gh-pages/* . || true
        rm -rf temp-gh-pages/
        
        # Add all files
        git add .
        
        # Commit if there are changes
        if git diff --staged --quiet; then
          echo "No changes to deploy"
        else
          git commit -m "feat: update GitHub Pages"
          git push origin gh-pages
          echo "âœ… Deployed to gh-pages branch"
        fi
